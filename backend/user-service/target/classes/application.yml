server:
  port: 8082
  servlet:
    context-path: /api/v1

spring:
  application:
    name: user-service

  # 数据源配置
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/web3_user_db
    username: web3_user
    password: web3_password
    type: com.alibaba.druid.pool.DruidDataSource
    
    # Druid连接池配置
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      filters: stat,wall,slf4j
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

  # JPA配置
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 50
        order_inserts: true
        order_updates: true

  # Redis配置
  data:
    redis:
      host: localhost
      port: 6379
      password:
      database: 2  # 使用数据库2，避免与其他服务冲突
      timeout: 5000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

  # 邮件配置
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME:your-email@gmail.com}
    password: ${MAIL_PASSWORD:your-app-password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true

  # 缓存配置
  cache:
    type: redis
    redis:
      time-to-live: 7200000  # 2小时

  # Security配置
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8082/api/v1/auth/.well-known/jwks.json

# JWT配置
jwt:
  secret: ${JWT_SECRET:mySecretKey123456789012345678901234567890}
  access-token:
    expiration: 86400000  # 24小时 (毫秒)
  refresh-token:
    expiration: 604800000 # 7天 (毫秒)
  issuer: web3-risk-platform

# 用户安全配置
user:
  security:
    password:
      min-length: 8
      require-uppercase: true
      require-lowercase: true
      require-digit: true
      require-special-char: true
      history-count: 5  # 记住最近5个密码
    
    lockout:
      enabled: true
      max-attempts: 5
      lockout-duration: 1800  # 30分钟 (秒)
    
    session:
      max-concurrent: 3  # 最大并发会话数
      timeout: 3600      # 会话超时 (秒)
    
    two-factor:
      enabled: true
      issuer-name: "Web3 Risk Platform"
      qr-code-size: 200
    
    verification:
      email-verification-required: true
      email-token-expiration: 86400  # 24小时 (秒)
      reset-password-token-expiration: 3600  # 1小时 (秒)

# 管理端点配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# 日志配置
logging:
  level:
    com.web3.user: DEBUG
    org.springframework.security: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/user-service.log

# API文档配置
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
  packages-to-scan: com.web3.user.controller

# 应用特定配置
app:
  cors:
    allowed-origins: 
      - "http://localhost:3000"
      - "http://localhost:3001"
    allowed-methods: 
      - "GET"
      - "POST"
      - "PUT"
      - "DELETE"
      - "OPTIONS"
    allowed-headers: 
      - "*"
    allow-credentials: true

  rate-limit:
    login:
      enabled: true
      max-requests: 5
      window-seconds: 300  # 5分钟
    
    register:
      enabled: true
      max-requests: 3
      window-seconds: 3600  # 1小时
    
    reset-password:
      enabled: true
      max-requests: 3
      window-seconds: 3600  # 1小时